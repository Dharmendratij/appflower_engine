== Main principles ==
1) AppFlower framework in non-obtrusive.
Users write normal Symfony actions + XML configs. They are not forced
to call any AppFlower PHP functions.

2) The Symfony action is always executed before reading the action XML config.
The action should only fill its variables.
It is called on many places:
    a) When rendering a view.
    b) When fetching rows from a datasource.



== Workflows for Views ==

=== List View ===
1) The server gets a GET request for /customer/listCustomer.
2) The customerActions->executeListCustomer() action is executed.
It has a chance to set its variables (e.g., $this->title).
3) The action variables are used when rendering the grid view.
The grid template is in customer/config/listCustomer.xml.
The template produces ExtJs javascript response.

4) The browser gets the ExtJs response.
The ExtJs code is executed. It will request data for the grid.
5) The server gets a GET request for /customer/listCustomer?af_format=json.
6) The customerActions->executeListCustomer() action is executed
to fill the action variables.
6) The datasource to use is read from customer/config/listCustomer.xml.
7) The datasource returns rows. They are converted to the desired JSON format
and returned to the browser.


=== Edit View ===
1) The server gets a GET request for /customer/editCustomer.
2) The customerActions->executeEditCustomer() action is executed.
It could fill the action varibles.
3) The datasource info is read from customer/config/editCustomer.xml.
The datasource is used to prefill the form.
4) The form layout is also read from customer/config/editCustomer.xml.
And ExtJs code is generated for it.
5) The browser gets the ExtJs response.

=== Form Submit ===
1) The server gets an Ajax POST request with the form data.
The URL is /customer/updateCustomer.
2) The validators to use are obtained from af_formcfg signed form hidden field.
3) The customerActions->executeUpdateCustomer() action is executed.
It does something with the form data.
4) A JSON response with a success message is returned to the browser.


=== Layout View with Multiple Components ===
1) The server gets a GET request for /customer/overview.
2) Action customerActions->executeOverview() is called.
3) The the action XML config refers to other widgets.
Their actions are also called to get varibles for their XML configs.
4) ExtJS code is generated from the XML configurations.
5) The ExtJS response is sent to the browser.

